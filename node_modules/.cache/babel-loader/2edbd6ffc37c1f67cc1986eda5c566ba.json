{"ast":null,"code":"class Node {\n  constructor(value) {\n    this.id = `Tile-${value}`;\n    this.value = value;\n    this.width = 2 * value;\n    this.next = null;\n  }\n\n}\n\nclass Stack {\n  constructor(maxLength) {\n    this.top = null;\n    this.bottom = null;\n    this.maxSize = maxLength;\n    this.size = 0;\n  }\n\n  push(value) {\n    let newNode = new Node(value); //Agregar el elemento solamente si la pila aún no está llena\n\n    if (this.size !== this.maxSize && !this.top) {\n      //Podemos agregar el elemento en la pila\n      this.top = newNode;\n    } else if (this.size !== this.maxSize && this.top) {\n      newNode.next = this.top;\n      this.top = newNode;\n    } else {\n      return console.log('Error: la pila está llena');\n    }\n\n    this.size++;\n    return this;\n  }\n\n  peek() {\n    return this.top;\n  }\n\n  pop() {\n    if (this.length > 0) {\n      let topNode = this.top;\n\n      if (topNode === this.maxValue) {}\n\n      this.top = topNode.next;\n      this.length--;\n      return topNode;\n    }\n  }\n\n  traverse() {\n    let list = [];\n    let currentNode = this.top;\n\n    while (currentNode) {\n      list.push(currentNode);\n      currentNode = currentNode.next;\n    }\n\n    return list;\n  }\n\n}\n\nexport default Stack;","map":{"version":3,"names":["Node","constructor","value","id","width","next","Stack","maxLength","top","bottom","maxSize","size","push","newNode","console","log","peek","pop","length","topNode","maxValue","traverse","list","currentNode"],"sources":["/home/editorial/Descargas/Robert/src/utils/Stack.js"],"sourcesContent":["class Node {\r\n  constructor(value) {\r\n    this.id = `Tile-${value}`;\r\n    this.value = value;\r\n    this.width = 2 * value;\r\n    this.next = null;\r\n  }\r\n}\r\n\r\nclass Stack {\r\n  constructor(maxLength) {\r\n    this.top = null;\r\n    this.bottom = null;\r\n    this.maxSize = maxLength;\r\n    this.size = 0;\r\n  }\r\n  push(value) {\r\n    let newNode = new Node(value);\r\n    //Agregar el elemento solamente si la pila aún no está llena\r\n    if (this.size !== this.maxSize && !this.top) {\r\n      //Podemos agregar el elemento en la pila\r\n      this.top = newNode;\r\n    } else if (this.size !== this.maxSize && this.top) {\r\n      newNode.next = this.top;\r\n      this.top = newNode;\r\n    } else {\r\n      return console.log('Error: la pila está llena');\r\n    }\r\n    this.size++;\r\n    return this;\r\n  }\r\n  peek() {\r\n    return this.top\r\n  }\r\n  pop() {\r\n    if (this.length > 0) {\r\n      let topNode = this.top;\r\n      if (topNode === this.maxValue){\r\n        \r\n      }\r\n      this.top = topNode.next;\r\n      this.length--;\r\n      return topNode;\r\n    }\r\n  }\r\n  traverse() {\r\n    let list = [];\r\n    let currentNode = this.top;\r\n    while(currentNode){\r\n      list.push(currentNode);\r\n      currentNode = currentNode.next;\r\n    }\r\n    return list;\r\n  }\r\n}\r\n\r\nexport default Stack;\r\n"],"mappings":"AAAA,MAAMA,IAAN,CAAW;EACTC,WAAW,CAACC,KAAD,EAAQ;IACjB,KAAKC,EAAL,GAAW,QAAOD,KAAM,EAAxB;IACA,KAAKA,KAAL,GAAaA,KAAb;IACA,KAAKE,KAAL,GAAa,IAAIF,KAAjB;IACA,KAAKG,IAAL,GAAY,IAAZ;EACD;;AANQ;;AASX,MAAMC,KAAN,CAAY;EACVL,WAAW,CAACM,SAAD,EAAY;IACrB,KAAKC,GAAL,GAAW,IAAX;IACA,KAAKC,MAAL,GAAc,IAAd;IACA,KAAKC,OAAL,GAAeH,SAAf;IACA,KAAKI,IAAL,GAAY,CAAZ;EACD;;EACDC,IAAI,CAACV,KAAD,EAAQ;IACV,IAAIW,OAAO,GAAG,IAAIb,IAAJ,CAASE,KAAT,CAAd,CADU,CAEV;;IACA,IAAI,KAAKS,IAAL,KAAc,KAAKD,OAAnB,IAA8B,CAAC,KAAKF,GAAxC,EAA6C;MAC3C;MACA,KAAKA,GAAL,GAAWK,OAAX;IACD,CAHD,MAGO,IAAI,KAAKF,IAAL,KAAc,KAAKD,OAAnB,IAA8B,KAAKF,GAAvC,EAA4C;MACjDK,OAAO,CAACR,IAAR,GAAe,KAAKG,GAApB;MACA,KAAKA,GAAL,GAAWK,OAAX;IACD,CAHM,MAGA;MACL,OAAOC,OAAO,CAACC,GAAR,CAAY,2BAAZ,CAAP;IACD;;IACD,KAAKJ,IAAL;IACA,OAAO,IAAP;EACD;;EACDK,IAAI,GAAG;IACL,OAAO,KAAKR,GAAZ;EACD;;EACDS,GAAG,GAAG;IACJ,IAAI,KAAKC,MAAL,GAAc,CAAlB,EAAqB;MACnB,IAAIC,OAAO,GAAG,KAAKX,GAAnB;;MACA,IAAIW,OAAO,KAAK,KAAKC,QAArB,EAA8B,CAE7B;;MACD,KAAKZ,GAAL,GAAWW,OAAO,CAACd,IAAnB;MACA,KAAKa,MAAL;MACA,OAAOC,OAAP;IACD;EACF;;EACDE,QAAQ,GAAG;IACT,IAAIC,IAAI,GAAG,EAAX;IACA,IAAIC,WAAW,GAAG,KAAKf,GAAvB;;IACA,OAAMe,WAAN,EAAkB;MAChBD,IAAI,CAACV,IAAL,CAAUW,WAAV;MACAA,WAAW,GAAGA,WAAW,CAAClB,IAA1B;IACD;;IACD,OAAOiB,IAAP;EACD;;AA5CS;;AA+CZ,eAAehB,KAAf"},"metadata":{},"sourceType":"module"}